<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.template("issuetracker/list", function(inputs, outputs, jagg) { %>
<%
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    var issueCategory = request.getParameter("issueCategory");
    var issueType = request.getParameter("issueType");
    var summaryOnly = getProperty(ISSUETRACKER_SUMMARY_ONLY);

    var hiddenSummary = "hidden" ;
    var hiddenInternal = "" ;

    if(summaryOnly==="true"){
		hiddenSummary = "" ;
		hiddenInternal = "hidden";
	} else {
		hiddenSummary = "hidden" ;
		hiddenInternal = "";
	}

	var issueTrackerUrl = "/issuetracker?appkey=" + applicationKey + "&issueCategory=" + issueCategory + "&appName=" + applicationName;
	if (issueType) {
	    issueTrackerUrl += "&issueType=" + issueType;
	}

%>
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/userActivity.js'))%>"></script>
<script type="text/javascript">
// Refer http://stackoverflow.com/questions/153152/resizing-an-iframe-based-on-content
// Resize iframe to full height
  function resizeIframe(height)
  {
    // "+60" is a general rule of thumb to allow for differences in
    // IE & and FF height reporting, can be adjusted as required..
    document.getElementById('iframeId').height = parseInt(height)+60;
  }

    var issuesSummaryJSON = {};


    $(document).ready(function(){
    	initializeUserActivity("issueList", '<%=applicationKey%>', '<%=applicationName%>');
        issuesSummary("<%=applicationKey%>");
        createCurrentStatus();
     });

    function reportIssue() {
        window.open('<%=outputs.newIssueUrl%>', '_blank');
    }

    function issuesSummary(appKey){

        jagg.syncPost("../blocks/issuetracker/list/ajax/list.jag", {
                action:"getIssuesSummary",
                applicationKey:appKey
        },function (result) {
                issuesSummaryJSON = result ;
        },function (jqXHR, textStatus, errorThrown) {
            $("#trackerStatus").text("Error occurred while retrieving Issue Tracker information!");
            $(".issuetracker").hide();
        });
    }
    function getIssueSummaryForVersion(version){
        return issuesSummaryJSON[version] ;
    }


    function VersionComparator(a,b) {
        return b.version.localeCompare(a.version);
    }

    function createCurrentStatus(){
        jagg.post("../blocks/application/get/ajax/list.jag", {
            action:"getAppVersionsInStages",
            userName:$("#userName").attr('value'),
            applicationKey:'<%=applicationKey%>'
        },function (result) {

            var parsedArray = jQuery.parseJSON(result);

            var versions = Array();
            for (var i = 0; i < parsedArray.length; i++) {
                var application = parsedArray[i];
                versions = versions.concat(application.versions);
            }

            versions.sort(VersionComparator);

//            issuesSummary("<%=applicationKey%>");
            var isIssuesAvailable = false;

            for (var j = 0; j < versions.length; j++) {
                var versionInfo = versions[j];
                var lasbuildinfo=versionInfo.lastBuildResult;
                var buildSplitted=lasbuildinfo.split(' ');
                var builResultStatus=buildSplitted[2];
                var buildStatus='';
                var success=new RegExp("\\bsuccess");
                if(success.test(builResultStatus)){
                    buildStatus='<span class="status success "><strong>'+builResultStatus+'</strong></span>';
                }else if(lasbuildinfo.length>0){
                    buildStatus='<span class="status failed "><strong>'+builResultStatus+'</strong></span>';
                }

                var repoCloneURL = versionInfo.repoURL;
                var repoBrowseURL = repoCloneURL;
                if( application.repositoryType == "git") {
                    repoBrowseURL = repoCloneURL.replace("/git/", "/summary/");
                }

                var v = versionInfo.version.replace(/\./g, '_') ;
                var issueSummaryObj =  getIssueSummaryForVersion(versionInfo.version);
                if(issueSummaryObj==null){
                    continue;
                }

                isIssuesAvailable = true;
                var bugObj = issueSummaryObj.BUG ;
                var featureObj = issueSummaryObj.NEW_FEATURE ;
                var supportObj = issueSummaryObj.VULNERABILITY ;

                addRecord('<strong class="push_right_10">' + versionInfo.version+'</strong>','<i class="tag">' +
                 versionInfo.stage + '</i>',bugObj,featureObj,supportObj);

            }
           /*
            var issueSummaryObjNA =  getIssueSummaryForVersion("NA");
            if (issueSummaryObjNA){
                isIssuesAvailable = true;
                var bugObjNA = issueSummaryObjNA.issueSummaryInStatusForBug ;
                var featureObjNA = issueSummaryObjNA.issueSummaryInStatusForFeature ;
                var supportObjNA = issueSummaryObjNA.issueSummaryInStatusForSupport ;

                addRecord(('<strong class="push_right_10">None</strong>'),bugObjNA.totalCount,featureObjNA.totalCount,supportObjNA.totalCount);
            }
            */
            if(!isIssuesAvailable){
                $("#issueTrackerMainHeader").html('<div class="noData-message">Issues have not been reported yet.</div>') ;
            }

            $("#issues_spinner").empty();
            $("#item_list_container").removeClass("hide").addClass("separator");

        },function (jqXHR, textStatus, errorThrown) {

        });
    }

    function addRecord(title,stage,bug,feature,support){
        if(bug=="0" && feature=="0" && support=="0"){
            return ;
        }
        if(title.indexOf('None')>0){
            stage="None";
        }

        if(bug===undefined){
            bug=0;
        }
        if(feature===undefined){
            feature=0;
        }
        if(support===undefined){
            support=0;
        }
        $('#item_list').append(
            $('<li class="item">'+
                '<div class="list_col_content col">'+title+'</div>'+
                '<div class="col" style="padding-top:7px">'+stage+'</div>'+
                '<div class="app_type col">'+bug+'</div>'+
                '<div class="app_type col">'+feature+'</div>'+
                '<div class="app_type col">'+support+'</div>'+
            '</li>')
        );
    }

</script>
    <input type="hidden" name="applicationKey" id="applicationKey" value="<%=applicationKey%>"/>
    <input type="hidden" name="userName" id="userName" value="<%=userName%>"/>

<iframe <%=hiddenInternal%> frameborder="0" scrolling="no" width="100%" height="100%" style="margin-left:0px"  src="<%=issueTrackerUrl%>" id="iframeId"></iframe>

<% jagg.includeBlock("page/messages", null); %>
<% jagg.includeBlock("page/eventing", {"applicationKey":null,"pageName":PAGES.ISSUES}); %>
<% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %>
<script>
    $(document).ready(function(){
    });
</script>

<!-- jQuery (necessary for Bootstraps JavaScript plugins) -->
<!-- Include all compiled plugins (below), or include individual files as needed -->
<!-- include custom js functions -->
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery-1.11.1/jquery.min.js'))%>"></script>
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/bootstrap-3.2.0/bootstrap.min.js'))%>"></script>
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/custom/custom.js'))%>"></script>

<% }); %>



